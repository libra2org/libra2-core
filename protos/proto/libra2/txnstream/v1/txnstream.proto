// protos/proto/libra2/txnstream/v1/txnstream.proto
syntax = "proto3";
package libra2.txnstream.v1;

message Empty {}

message ChainIdResponse {
  uint32 chain_id = 1;
}

message ServerInfoResponse {
  string version = 1;
  uint64 build_timestamp = 2;
}

message TransactionsRequest {
  uint64 start_version = 1;
  bool include_events = 2;
  uint32 batch_size = 3;   // server clamps to sane max (e.g., 1000)
  uint32 max_wait_ms = 4;  // long-poll; 0 = immediate
  bool exclude_ledger_changes = 5;
}

message TransactionOutput {
  uint64 version = 1;
  bytes txn = 2;            // bcs-encoded transaction
  repeated bytes events = 3;// bcs-encoded events
  bytes info = 4;           // bcs-encoded TransactionInfo
}

message TransactionsResponse {
  repeated TransactionOutput batch = 1;
}

service TxnStream {
  rpc GetChainId(Empty) returns (ChainIdResponse);
  rpc GetServerInfo(Empty) returns (ServerInfoResponse);
  rpc StreamTransactions(TransactionsRequest) returns (stream TransactionsResponse);
}